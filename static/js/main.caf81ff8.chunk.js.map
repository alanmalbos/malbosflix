{"version":3,"sources":["Tmdb.js","components/MovieRow.js","components/FeatureItem.js","components/Header/index.js","App.js","index.js"],"names":["API_KEY","basicFetch","endpoint","a","fetch","req","json","getHomeList","slug","title","items","getFeatureItem","itemId","type","info","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","style","fontSize","listW","results","length","marginLeft","width","map","item","key","src","poster_path","alt","original_title","firstDate","Date","first_air_date","genres","i","push","name","description","overview","substr","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","href","id","join","black","movieList","setMovieList","featureItem","setFeatureItem","blackHeader","setBlackHeader","useEffect","Tmdb","list","originals","filter","randomChosen","floor","random","chosen","chosenInfo","loadAll","scrollListener","scrollY","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.caf81ff8.chunk.js","sourcesContent":["const API_KEY = 'b3da01dc7fba27b442d584f25e5373ea';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nconst basicFetch = async(endpoint) => {\r\n    const req = await fetch(`${BASE_URL}${endpoint}`);\r\n    const json = await req.json();\r\n    return json;\r\n}\r\n\r\nexport default {\r\n    getHomeList: async () => {\r\n        return [\r\n            {\r\n                slug: 'originals',\r\n                title: 'Originais do Netflix',\r\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados',\r\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'toprated',\r\n                title: 'Mais votados',\r\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title: 'Comédia',\r\n                items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title: 'Ação',\r\n                items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'documentary',\r\n                title: 'Documentários',\r\n                items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n        ];\r\n    },\r\n\r\n    getFeatureItem: async(itemId, type) => {\r\n        let info = {};\r\n\r\n        if(itemId){\r\n            switch (type) {\r\n                case 'movie':\r\n                    info = await basicFetch(`/movie/${itemId}?language=pt-BR&api_key=${API_KEY}`);\r\n                    break;\r\n\r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${itemId}?language=pt-BR&api_key=${API_KEY}`);\r\n                    break;\r\n                default:\r\n                    info = null;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return info;\r\n    }\r\n}","import React, {useState} from 'react';\r\nimport './MovieRow.css';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nexport default({title, items}) => {\r\n    const [scrollX, setScrollX] = useState(0);\r\n\r\n    const handleLeftArrow = () => {\r\n        let x = scrollX + Math.round(window.innerWidth / 2);\r\n        if(x > 0 ){\r\n            x = 0;\r\n        }\r\n        setScrollX(x);\r\n    }\r\n\r\n    const handleRightArrow = () => {\r\n        let x = scrollX - Math.round(window.innerWidth / 2);\r\n        let listW = items.results.length * 150;\r\n\r\n        if((window.innerWidth - listW) > x){\r\n            x = (window.innerWidth - listW) - 60;\r\n        }\r\n        setScrollX(x);\r\n    }\r\n\r\n    return (\r\n        <div className='MovieRow'>\r\n            <h2>{title}</h2>\r\n            <div className='MovieRow--left' onClick={handleLeftArrow}>\r\n                <NavigateBeforeIcon style={{fontSize: 50}}/>\r\n            </div>\r\n            <div className='MovieRow--right' onClick={handleRightArrow}>\r\n                <NavigateNextIcon style={{fontSize: 50}}/>\r\n            </div>\r\n\r\n            <div className='MovieRow--listarea'>\r\n\r\n                <div className='MovieRow--list' style={{\r\n                    marginLeft: scrollX,\r\n                    width: items.results.length * 150\r\n                }}>\r\n                    {items.results.length > 0 && items.results.map((item, key)=>(\r\n                        <div className='MovieRow--item' key={key}>\r\n                            <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title}/>\r\n                        </div>\r\n                        \r\n                    ))}\r\n                </div>\r\n\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './FeatureItem.css';\r\n\r\nexport default ({item}) => {\r\n\r\n    let firstDate = new Date(item.first_air_date);\r\n    let genres = [];\r\n    for(let i in item.genres){\r\n        genres.push( item.genres[i].name);\r\n    }\r\n    let description = item.overview;\r\n    if(description.length > 200){\r\n        description = description.substr(0, 200) + '...';\r\n    }\r\n    \r\n\r\n    return (\r\n        <section className='feature' style={{\r\n            backgroundSize:'cover',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n        }}>\r\n            <div className='feature--vertical'>\r\n                <div className='feature--horizontal'>\r\n                    <div className='feature--name'>{item.original_name}</div>\r\n                    <div className='feature--info'>\r\n                        <div className='feature--points'>{item.vote_average} pontos</div>\r\n                        <div className='feature--year'>{firstDate.getFullYear()}</div>\r\n                        <div className='feature--seasons'>{item.number_of_seasons} temporada{item.number_of_seasons !== 1 && 's'}</div>\r\n                    </div>\r\n                    <div className='feature--description'>{description}</div>\r\n                    <div className='feature--buttons'>\r\n                        <a href={`/watch/${item.id}`} className='feature--watchbutton'>▸ Assistir</a>\r\n                        <a href={`/list/add/${item.id}`} className='feature--mylistbutton'>+ Minha Lista</a>\r\n                    </div>\r\n                    <div className='feature--genres'><strong>Gêneros: </strong>{genres.join(', ')}</div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}","import React from 'react';\r\nimport './Header.css'\r\n\r\nexport default ({black}) => {\r\n    return (\r\n        <div>\r\n            <header className={black ? 'black' : ''}>\r\n                <div className='header--logo'>\r\n                    <img src='https://upload.wikimedia.org/wikipedia/commons/0/0f/Logo_Netflix.png' alt='Netflix'/>\r\n                </div>\r\n                <div className='header--user'>\r\n                    <img src='https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png' alt='Usuário'/>\r\n                </div>\r\n            </header>\r\n        </div>\r\n    );\r\n}","import React ,{ useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport Tmdb from './Tmdb';\r\nimport MovieRow from './components/MovieRow';\r\nimport FeatureItem from './components/FeatureItem';\r\nimport Header from './components/Header';\r\n\r\nexport default () => {\r\n\r\n  const[movieList, setMovieList] = useState([]);\r\n  const [featureItem, setFeatureItem] = useState(null);\r\n  const [blackHeader, setBlackHeader] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const loadAll = async () => {\r\n      let list = await Tmdb.getHomeList();\r\n      setMovieList(list);\r\n\r\n      let originals = list.filter(i=>i.slug === 'originals');\r\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\r\n      let chosen = originals[0].items.results[randomChosen];\r\n\r\n      let chosenInfo = await Tmdb.getFeatureItem(chosen.id, 'tv');\r\n      setFeatureItem(chosenInfo);\r\n    }\r\n    \r\n    loadAll();\r\n  }, []);\r\n\r\n  useEffect(()=> {\r\n    const scrollListener = () => {\r\n      if(window.scrollY > 10){\r\n        setBlackHeader(true);\r\n      } else {\r\n        setBlackHeader(false);\r\n      }\r\n    }\r\n\r\n    window.addEventListener('scroll', scrollListener);\r\n    return () => {\r\n      window.removeEventListener('scrool', scrollListener);\r\n    }\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"page\">\r\n\r\n      <Header black={blackHeader}/>\r\n\r\n      {featureItem &&\r\n        <FeatureItem item={featureItem}/>\r\n      }\r\n\r\n      <section className=\"lists\">\r\n        {movieList.map((item, key)=>(\r\n          <MovieRow key={key} title={item.title} items={item.items}/>\r\n        ))}\r\n      </section>\r\n\r\n      <footer>\r\n        Develop by <strong>Alan Malbos</strong><br/>\r\n        Image rights to <a href='https://www.netflix.com/'><strong>Netflix</strong></a><br/>\r\n        Data from <a href='https://www.themoviedb.org/'><strong>TheMovieDB.org</strong></a>\r\n      </footer>\r\n      \r\n      {featureItem === null &&\r\n      <div className='loading'>\r\n        <img src='https://www.filmelier.com/pt/br/news/wp-content/uploads/2020/03/netflix-loading-471x256.gif' alt='Loading'/>\r\n      </div>\r\n      }\r\n      \r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}